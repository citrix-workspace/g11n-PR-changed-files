{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/normalize-paginated-list-response.js","../dist-src/iterator.js","../dist-src/paginate.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"1.0.2\";\n","/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint:\n *\n * - https://developer.github.com/v3/search/#example (key `items`)\n * - https://developer.github.com/v3/checks/runs/#response-3 (key: `check_runs`)\n * - https://developer.github.com/v3/checks/suites/#response-1 (key: `check_suites`)\n * - https://developer.github.com/v3/apps/installations/#list-repositories (key: `repositories`)\n * - https://developer.github.com/v3/apps/installations/#list-installations-for-a-user (key `installations`)\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not. For the exceptions with the namespace, a fallback check for the route\n * paths has to be added in order to normalize the response. We cannot check for the total_count\n * property because it also exists in the response of Get the combined status for a specific ref.\n */\nconst REGEX_IS_SEARCH_PATH = /^\\/search\\//;\nconst REGEX_IS_CHECKS_PATH = /^\\/repos\\/[^/]+\\/[^/]+\\/commits\\/[^/]+\\/(check-runs|check-suites)/;\nconst REGEX_IS_INSTALLATION_REPOSITORIES_PATH = /^\\/installation\\/repositories/;\nconst REGEX_IS_USER_INSTALLATIONS_PATH = /^\\/user\\/installations/;\nexport function normalizePaginatedListResponse(octokit, url, response) {\n    const path = url.replace(octokit.request.endpoint.DEFAULTS.baseUrl, \"\");\n    if (!REGEX_IS_SEARCH_PATH.test(path) &&\n        !REGEX_IS_CHECKS_PATH.test(path) &&\n        !REGEX_IS_INSTALLATION_REPOSITORIES_PATH.test(path) &&\n        !REGEX_IS_USER_INSTALLATIONS_PATH.test(path)) {\n        if (!Array.isArray(response.data)) {\n            response.data = [response.data];\n        }\n        return;\n    }\n    // keep the additional properties intact as there is currently no other way\n    // to retrieve the same information.\n    const incompleteResults = response.data.incomplete_results;\n    const repositorySelection = response.data.repository_selection;\n    const totalCount = response.data.total_count;\n    delete response.data.incomplete_results;\n    delete response.data.repository_selection;\n    delete response.data.total_count;\n    const namespaceKey = Object.keys(response.data)[0];\n    response.data = response.data[namespaceKey];\n    if (typeof incompleteResults !== \"undefined\") {\n        response.data.incomplete_results = incompleteResults;\n    }\n    if (typeof repositorySelection !== \"undefined\") {\n        response.data.repository_selection = repositorySelection;\n    }\n    response.data.total_count = totalCount;\n}\n","import { normalizePaginatedListResponse } from \"./normalize-paginated-list-response\";\nexport function iterator(octokit, route, parameters) {\n    const options = octokit.request.endpoint(route, parameters);\n    const method = options.method;\n    const headers = options.headers;\n    let url = options.url;\n    return {\n        [Symbol.asyncIterator]: () => ({\n            next() {\n                if (!url) {\n                    return Promise.resolve({ done: true });\n                }\n                return octokit\n                    .request({ method, url, headers })\n                    .then((response) => {\n                    normalizePaginatedListResponse(octokit, url, response);\n                    // `response.headers.link` format:\n                    // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n                    // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n                    url = ((response.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n                    return { value: response };\n                });\n            }\n        })\n    };\n}\n","import { iterator } from \"./iterator\";\nexport function paginate(octokit, route, parameters, mapFn) {\n    if (typeof parameters === \"function\") {\n        mapFn = parameters;\n        parameters = undefined;\n    }\n    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\nfunction gather(octokit, results, iterator, mapFn) {\n    return iterator.next().then(result => {\n        if (result.done) {\n            return results;\n        }\n        let earlyExit = false;\n        function done() {\n            earlyExit = true;\n        }\n        results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n        if (earlyExit) {\n            return results;\n        }\n        return gather(octokit, results, iterator, mapFn);\n    });\n}\n","import { VERSION } from \"./version\";\nimport { paginate } from \"./paginate\";\nimport { iterator } from \"./iterator\";\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nexport function paginateRest(octokit) {\n    return {\n        paginate: Object.assign(paginate.bind(null, octokit), {\n            iterator: iterator.bind(null, octokit)\n        })\n    };\n}\npaginateRest.VERSION = VERSION;\n"],"names":["VERSION","REGEX_IS_SEARCH_PATH","REGEX_IS_CHECKS_PATH","REGEX_IS_INSTALLATION_REPOSITORIES_PATH","REGEX_IS_USER_INSTALLATIONS_PATH","normalizePaginatedListResponse","octokit","url","response","path","replace","request","endpoint","DEFAULTS","baseUrl","test","Array","isArray","data","incompleteResults","incomplete_results","repositorySelection","repository_selection","totalCount","total_count","namespaceKey","Object","keys","iterator","route","parameters","options","method","headers","Symbol","asyncIterator","next","Promise","resolve","done","then","link","match","value","paginate","mapFn","undefined","gather","results","result","earlyExit","concat","paginateRest","assign","bind"],"mappings":"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"}